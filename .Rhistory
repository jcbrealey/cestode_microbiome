maas.asv.relab.v1 <- maas.asv.relab.v1$results
}
# subset to fish gut
if(file.exists("maaslin2_out/ASV_relab_v2_gut_cestode_present/all_results.tsv")){
maas.asv.relab.v2a <- read.delim("maaslin2_out/ASV_relab_v2_gut_cestode_present/all_results.tsv")
} else {
maas.asv.relab.v2a <- Maaslin2(
input_data = maas.asv.relab[which(meta.merged$Sample.type == "salmon_gut"),],
input_metadata = meta.merged[which(meta.merged$Sample.type == "salmon_gut"),],
fixed_effects = c("Cestode.present","Feed.Type","Sex","Size.class"),
random_effects = c("Sampling.Date"),
reference = c("Size.class,Small"),
output = "maaslin2_out/ASV_relab_v2_gut_cestode_present",
normalization = "NONE", transform = "NONE"
)
maas.asv.relab.v2a <- maas.asv.relab.v2a$results
}
if(file.exists("maaslin2_out/ASV_relab_v2_gut_cestode_index/all_results.tsv")){
maas.asv.relab.v2b <- read.delim("maaslin2_out/ASV_relab_v2_gut_cestode_index/all_results.tsv")
} else {
maas.asv.relab.v2b <- Maaslin2(
input_data = maas.asv.relab[which(meta.merged$Sample.type == "salmon_gut"),],
input_metadata = meta.merged[which(meta.merged$Sample.type == "salmon_gut"),],
fixed_effects = c("Cestode.index","Feed.Type","Sex","Size.class"),
random_effects = c("Sampling.Date"),
reference = c("Size.class,Small"),
output = "maaslin2_out/ASV_relab_v2_gut_cestode_index",
normalization = "NONE", transform = "NONE"
)
maas.asv.relab.v2b <- maas.asv.relab.v2b$results
}
# Supp Table: Taxa associations
maas.gen.relab.v1[which(maas.gen.relab.v1$qval < 0.2),]
maas.gen.relab.v2a[which(maas.gen.relab.v2a$qval < 0.2),]
#none
maas.gen.relab.v2b[which(maas.gen.relab.v2b$qval < 0.2),]
maas.asv.relab.v1[which(maas.asv.relab.v1$qval < 0.2),]
maas.asv.relab.v1$ASV_genus <- sapply(maas.asv.relab.v1$feature, function(x){
if(is.na(asv.taxa.df[as.character(x),"Genus"])){
asv.taxa.df[as.character(x),"Family"]
} else {
asv.taxa.df[as.character(x),"Genus"]
}
})
maas.asv.relab.v2a[which(maas.asv.relab.v2a$qval < 0.2),]
#none
maas.asv.relab.v2b[which(maas.asv.relab.v2b$qval < 0.25),]
maas.asv.relab.v2b$ASV_genus <- sapply(maas.asv.relab.v2b$feature, function(x){
if(is.na(asv.taxa.df[as.character(x),"Genus"])){
asv.taxa.df[as.character(x),"Family"]
} else {
asv.taxa.df[as.character(x),"Genus"]
}
})
maas.asv.relab.sample_type.sigseqs <- unique(
maas.asv.relab.v1[which(maas.asv.relab.v1$qval < 0.2),"feature"]
)
maas.asv.relab.cestode.sigseqs <- unique(
maas.asv.relab.v2b[which(maas.asv.relab.v2b$qval < 0.25),"feature"]
)
maas.asv.relab.df <- subset(
dfm.relab.m, ASV.ID %in% c(maas.asv.relab.sample_type.sigseqs,maas.asv.relab.cestode.sigseqs)
)
maas.asv.relab.df$Genus <- sapply(maas.asv.relab.df$ASV.ID, function(x){
if(is.na(asv.taxa.df[as.character(x),"Genus"])){
asv.taxa.df[as.character(x),"Family"]
} else {
asv.taxa.df[as.character(x),"Genus"]
}
})
maas.asv.relab.df$ASV.ID.of <- factor(
maas.asv.relab.df$ASV.ID, levels = unique(maas.asv.relab.df[order(maas.asv.relab.df$Genus),"ASV.ID"]), ordered = TRUE
)
# Supp table of Maaslin2 results
if(!file.exists("figures/Supp_TableS1_maaslin2_results.csv")){
maas.gen.relab.v1$model <- "Genus_m1"
maas.gen.relab.v2b$model <- "Genus_m2"
maas.gen.relab.v1$ASV_genus <- NA
maas.gen.relab.v2b$ASV_genus <- NA
maas.asv.relab.v1$model <- "ASV_m1"
maas.asv.relab.v2b$model <- "ASV_m2"
maas.res <- rbind.data.frame(
maas.gen.relab.v2b[which(maas.gen.relab.v2b$qval < 0.25),c(2,1,3:9,11,10)],
maas.asv.relab.v2b[which(maas.asv.relab.v2b$qval < 0.25),c(2,1,3:11)],
maas.gen.relab.v1[which(maas.gen.relab.v1$qval < 0.25),c(2,1,3:9,11,10)],
maas.asv.relab.v1[which(maas.asv.relab.v1$qval < 0.25),c(2,1,3:11)]
)
write.csv(maas.res, "figures/Supp_TableS1_maaslin2_results.csv", row.names = F, quote = F)
}
#### Top ASV and genera plots ####
# Supp Figure: Cestode index (ASV)
p.bx.asv <-
ggplot(maas.asv.relab.df[which(maas.asv.relab.df$ASV.ID %in% maas.asv.relab.cestode.sigseqs &
maas.asv.relab.df$Sample.type == "salmon_gut"),],
aes(Cestode.index, proportion))+
facet_wrap(~Genus + ASV.ID, scales = "free_y", nrow = 1)+
geom_boxplot(outlier.colour = NA, fill = NA)+
geom_point(aes(color=Cestode.index), size = 2, position = position_jitterdodge())+
labs(x="Cestode index", y="Proportion of 16S reads")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "none", strip.text = element_text(face = "bold"))
# Supp Figure: Cestode index/present (genus)
psm.genus.top.rel <- top_taxa(psm.genus, sample_var = "SampleID", top = 12)
psm.genus.top.rel <- as.data.frame(prop.table(as.matrix(psm.genus.top.rel[,2:ncol(psm.genus.top.rel)]), margin = 1))
psm.genus.top.rel$SampleID <- row.names(psm.genus.top.rel)
psm.genus.top.rel <- melt(psm.genus.top.rel, id.vars = "SampleID", value.name = "proportion", variable.name = "taxon")
psm.genus.top.rel <- merge(psm.genus.top.rel, meta.merged, by = "SampleID", all.x = T, all.y = F)
psm.genus.top.rel$Sample.type <- factor(psm.genus.top.rel$Sample.type, levels = c("salmon_gut","cestode_wash","cestode_body"))
p.bx.gen.1 <-
ggplot(psm.genus.top.rel[which(psm.genus.top.rel$Sample.type == "salmon_gut" &
psm.genus.top.rel$taxon %in% c("Mycoplasma","Photobacterium")),],
aes(Cestode.index, proportion))+
facet_wrap(~taxon) +
geom_boxplot(outlier.colour = NA, fill = NA)+
geom_point(aes(color=Cestode.index), size = 2, position = position_jitterdodge())+
scale_y_continuous(limits = c(0,1))+
labs(x="Cestode index", y="Proportion of 16S reads")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "none", strip.text = element_text(face = "bold"))
p.bx.gen.2 <-
ggplot(psm.genus.top.rel[which(psm.genus.top.rel$Sample.type == "salmon_gut" &
psm.genus.top.rel$taxon %in% c("Carnobacterium","Aliivibrio","Brevinema")),],
aes(Cestode.present, proportion))+
facet_wrap(~taxon) +
geom_boxplot(outlier.colour = NA, fill = NA)+
geom_point(aes(color=Cestode.present), size = 2, position = position_jitterdodge())+
scale_color_manual(values = c("#440154FF","#12b3b3"))+
scale_y_continuous(limits = c(0,1))+
labs(x="Cestode present", y="Proportion of 16S reads")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "none", strip.text = element_text(face = "bold"))
# Supp Figure: Cestode index/presence (genus + ASV combined)
p.bx.gen <-
plot_grid(p.bx.gen.1, p.bx.gen.2, align = "h", axis = "tblr",
nrow = 1, rel_widths = c(1,1.2), labels = c("a","b"))
plot_grid(p.bx.gen.1, p.bx.gen.2, align = "h", axis = "tblr",
nrow = 1, rel_widths = c(1,1.2), labels = c("a","b"))
if(!file.exists("figures/Supp_FigS5_cestode_comb_genusASV_boxplot.pdf")){
ggsave("figures/Supp_FigS5_cestode_comb_genusASV_boxplot.pdf", width = 6.5, height = 6.5)
}
# Supp Figure: Sample type (genus + ASV combined)
maas.plot.st.p1 <-
ggplot(psm.genus.top.rel[which(psm.genus.top.rel$taxon
%in% c("Photobacterium","Carnobacterium","Aliivibrio",
"Ureaplasma","Mycoplasma","Brevinema",
"Lactobacillus","Mycoplasmataceae_sp")),],
aes(Sample.type, proportion))+
facet_wrap(~taxon, nrow = 2)+
geom_boxplot(outlier.colour = NA, fill = NA)+
geom_point(aes(color=Sample.type), size = 2, position = position_jitterdodge())+
scale_x_discrete(labels = c("gut","wash","body"))+
labs(x="Sample type", y="Proportion of 16S reads")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "none", strip.text = element_text(face = "bold"))
maas.plot.st.p2 <-
ggplot(maas.asv.relab.df[which(maas.asv.relab.df$ASV.ID %in% maas.asv.relab.sample_type.sigseqs),],
aes(Sample.type, proportion))+
facet_wrap(~Genus + ASV.ID.of, scales = "free_y", nrow = 4)+
geom_boxplot(outlier.colour = NA, fill = NA)+
geom_point(aes(color=Sample.type), size = 2, position = position_jitterdodge())+
scale_x_discrete(labels = c("gut","wash","body"))+
labs(x="Sample type", y="Proportion of 16S reads")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "none", strip.text = element_text(face = "bold"))
plot_grid(maas.plot.st.p1, maas.plot.st.p2, align = "hv", axis = "tblr", nrow = 2, rel_heights = c(0.75,1), labels = c("a","b"))
if(!file.exists("figures/Supp_FigS6_sampletype_comb_genusASV_boxplot.pdf")){
ggsave("figures/Supp_FigS6_sampletype_comb_genusASV_boxplot.pdf", units = "in", dpi = 600, width = 10, height = 10)
}
#### Alpha diversity ####
alpha.asv <- data.frame(SampleID=row.names(df.merge),
Richness=specnumber(df.merge),
Shannon=diversity(t(df.merge), index = "shannon"))
alpha.asv <- merge(alpha.asv, meta.merged, by = "SampleID")
alpha.asv$Sample.type <- factor(alpha.asv$Sample.type, levels = c("salmon_gut","cestode_wash","cestode_body"))
# Supp Figure: alpha diversity
p.alpha1 <-
ggplot(alpha.asv, aes(Sample.type,Richness))+ #
facet_grid(~Cestode.index)+
geom_boxplot(outlier.color = NA)+
geom_point(aes(color = Sample.type), size = 2, position = position_jitterdodge())+
scale_x_discrete(labels = c("gut","wash","body"))+
labs(x = "Sample type", y = "Richness (no. of ASVs)")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "none", strip.text = element_text(face = "bold"))
summary(lm(Richness ~ Cestode.index, alpha.asv, subset = Sample.type=="salmon_gut"))
"Residual standard error: 7.733 on 26 degrees of freedom
Multiple R-squared:  0.06923,	Adjusted R-squared:  -0.03817
F-statistic: 0.6446 on 3 and 26 DF,  p-value: 0.5933"
summary(lm(Richness ~ Cestode.index + Reads.sequenced.sum, alpha.asv, subset = Sample.type=="salmon_gut"))
"Residual standard error: 7.328 on 25 degrees of freedom
Multiple R-squared:  0.1962,	Adjusted R-squared:  0.06758
F-statistic: 1.525 on 4 and 25 DF,  p-value: 0.2252"
summary(lm(Richness ~ Sample.type, alpha.asv))
"Residual standard error: 5.883 on 64 degrees of freedom
Multiple R-squared:   0.17,	Adjusted R-squared:  0.1441
F-statistic: 6.555 on 2 and 64 DF,  p-value: 0.002573"
summary(lm(Richness ~ Sample.type + Reads.sequenced.sum, alpha.asv))
"Residual standard error: 5.736 on 63 degrees of freedom
Multiple R-squared:  0.2233,	Adjusted R-squared:  0.1863
F-statistic: 6.036 on 3 and 63 DF,  p-value: 0.001113"
## Alpha diversity using Hill's numbers framework
alpha.asv.hill <- data.frame(SampleID=row.names(otu_table(psm.relab)),
Hill.q1=hill_taxa(otu_table(psm.relab), q = 1),
Hill.q2=hill_taxa(otu_table(psm.relab), q = 2))
alpha.asv <- merge(alpha.asv, alpha.asv.hill, by = "SampleID")
p.alpha2 <-
ggplot(alpha.asv, aes(Sample.type,Hill.q1))+
facet_grid(~Cestode.index)+
geom_boxplot(outlier.color = NA)+
geom_point(aes(color = Sample.type), size = 2, position = position_jitterdodge())+
scale_x_discrete(labels = c("gut","wash","body"))+
labs(x = "Sample type", y = "Shannon diversity")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "none", strip.text = element_text(face = "bold"))
plot_grid(p.alpha1, p.alpha2, align = "hv", axis = "tblr", nrow = 2, labels = c("a","b"))
if(!file.exists("figures/Supp_FigS4ab_alpha_diversity_both.png")){
ggsave("figures/Supp_FigS4ab_alpha_diversity_both.png", units = "in", dpi = 600, width = 6.5, height = 5)
}
ggplot(alpha.asv, aes(Sample.type,Hill.q1))+
geom_boxplot(outlier.color = NA)+
geom_point(aes(color = Sample.type), size = 2, position = position_jitterdodge())+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "none", strip.text = element_text(face = "bold"))
summary(lm(Hill.q1 ~ Cestode.index, alpha.asv, subset = Sample.type=="salmon_gut"))
"Residual standard error: 3.137 on 26 degrees of freedom
Multiple R-squared:  0.08566,	Adjusted R-squared:  -0.01984
F-statistic: 0.8119 on 3 and 26 DF,  p-value: 0.4988"
summary(lm(Hill.q1 ~ Cestode.index + Reads.sequenced.sum, alpha.asv, subset = Sample.type=="salmon_gut"))
"Residual standard error: 3.121 on 25 degrees of freedom
Multiple R-squared:  0.1298,	Adjusted R-squared:  -0.009477
F-statistic: 0.9319 on 4 and 25 DF,  p-value: 0.4614"
summary(lm(Hill.q1 ~ Sample.type, alpha.asv))
"Residual standard error: 2.352 on 64 degrees of freedom
Multiple R-squared:  0.06119,	Adjusted R-squared:  0.03185
F-statistic: 2.086 on 2 and 64 DF,  p-value: 0.1326"
# cestode body significantly lower than gut, whereas cestode wash not
summary(lm(Hill.q1 ~ Sample.type + Reads.sequenced.sum, alpha.asv))
"Residual standard error: 2.364 on 63 degrees of freedom
Multiple R-squared:  0.06638,	Adjusted R-squared:  0.02192
F-statistic: 1.493 on 3 and 63 DF,  p-value: 0.225"
# ok, tendancy now only "weak" evidence for cestode body to be lower in diversity than gut (p=0.06)
#### Fig 2 & 3: Mycoplasma clades based on 16S tree ####
myco.salmon <- c("seq91","seq2","seq3","seq124","seq64","seq131","seq170","seq817","seq26","seq156")
myco.cestode1 <- c("seq29","seq73","seq18","seq21","seq361","seq1")
myco.cestode2 <- c("seq7","seq10","seq58","seq57")
myco.df <- data.frame(
SampleID=row.names(df.merge),
Myco_Salmon=rowSums(df.merge[,myco.salmon]),
Myco_Cestode1=rowSums(df.merge[,myco.cestode1]),
Myco_Cestode2=rowSums(df.merge[,myco.cestode2]),
Total=rowSums(df.merge)
)
myco.df.m <- melt(myco.df, id.vars = c("SampleID","Total"), measure.vars = c(2:4),
value.name = "count", variable.name = "Myco_clade")
myco.df.m$relab <- myco.df.m$count / myco.df.m$Total
myco.df.m <- merge(myco.df.m, meta.merged, by = "SampleID", all.x = T, all.y = F)
if(!file.exists("figures/Fig3_mycoplasma_clade_by_sample_type.pdf")){
pdf("figures/Fig3_mycoplasma_clade_by_sample_type.pdf",
width = 6.5, height = 2.5, colormodel = "srgb", paper = "a4r")
ggplot(myco.df.m[grep("Myco",myco.df.m$Myco_clade),], aes(Sample.type, relab))+
facet_wrap(~Myco_clade, nrow = 1,
labeller=labeller(Myco_clade = c(Myco_Salmon="Salmon clade", Myco_Cestode1="Cestode clade 1", Myco_Cestode2="Cestode clade 2")))+
geom_line(aes(group = Fish.ID, color = Cestode.index, linetype = as.factor(Samples.per.fish)))+
geom_point(aes(color = Cestode.index), size = 2)+
scale_x_discrete(labels = c("salmon\ngut","cestode\nwash","cestode\nbody"))+
scale_linetype_manual(values = c(0,3,1))+
labs(x="Sample type", y="Proportion of 16S reads", color = "Cestode index", linetype = "Samples per fish")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "right", strip.text = element_text(face = "bold"))
dev.off()
}
myco.tree.order <- read.delim("data/mycoplasma_16S_tree_ASV_tip_order.txt", header = F)
myco.tree.order <- grep("seq",myco.tree.order$V1, value = T)
myco.tree.samples <- meta.merged[order(meta.merged$Sample.type, meta.merged$Cestode.index),"SampleID"]
dfm.myco.relab <- dfm.relab.m[which(dfm.relab.m$ASV.ID %in% myco.tree.order),]
dfm.myco.relab[which(dfm.myco.relab$proportion == 0),"proportion"] <- NA
dfm.myco.relab$ASV.ID <- factor(dfm.myco.relab$ASV.ID, levels = rev(myco.tree.order))
dfm.myco.relab$SampleID <- factor(dfm.myco.relab$SampleID, levels = myco.tree.samples)
if(!file.exists("figures/Fig2b_mycoplasma_abundance_presence.pdf")){
pdf("figures/Fig2b_mycoplasma_abundance_presence.pdf",
width = 10, height = 6, colormodel = "srgb", paper = "a4r")
ggplot(dfm.myco.relab, aes(SampleID, ASV.ID))+
geom_point(aes(color = Sample.type, size = proportion), alpha = 0.75)+
geom_hline(yintercept = 9.5, color = "grey50", linetype = 2)+
geom_hline(yintercept = 19.5, color = "grey50", linetype = 2)+
labs(x = "", y = "")+
theme_classic()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "right", axis.text.x = element_blank())
dev.off()
}
#### Size/weight vs Cestode index ####
## HoloFish entire cohort
# Cestode distribution by feed type
holofish.cestode.distrib <- as.data.frame(prop.table(table(meta.holofish[,c("Feed.Type","Cestode.index")]), margin = 1))
holofish.cestode.distrib$y_pos <- NA
holofish.cestode.distrib[holofish.cestode.distrib$Feed.Type == "Feed1","y_pos"] <-
cumsum(rev(holofish.cestode.distrib[holofish.cestode.distrib$Feed.Type == "Feed1","Freq"]))
holofish.cestode.distrib[holofish.cestode.distrib$Feed.Type == "Feed2","y_pos"] <-
cumsum(rev(holofish.cestode.distrib[holofish.cestode.distrib$Feed.Type == "Feed2","Freq"]))
holofish.cestode.distrib$Freq.2 <- round(holofish.cestode.distrib$Freq, digits = 3)
ggplot(holofish.cestode.distrib, aes(Feed.Type, Freq, fill = Cestode.index))+
geom_col(position = "stack")+
scale_fill_manual(values = viridis::viridis(4))+
labs(x = "Feed type", y = "Proportion of individuals", fill = "Cestode index")+
theme_classic()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5), axis.text = element_text(size = 6, colour = "black"),
legend.position = "right")
if(!file.exists("figures/Supp_FigS1_cestode_index_vs_feedtype.png")){
ggsave("figures/Supp_FigS1_cestode_index_vs_feedtype.png", units = "in", dpi = 600,  width = 3, height = 3)
}
# stats
table(meta.holofish$Cestode.present)
"FALSE  TRUE
85   378 "
prop.table(table(meta.holofish$Cestode.present))
"    FALSE      TRUE
0.1835853 0.8164147"
prop.table(table(meta.holofish$Cestode.index))
"        0          1          2          3
0.18358531 0.41468683 0.31533477 0.08639309 "
prop.table(table(meta.holofish[,c("Feed.Type","Cestode.index")]), margin = 1)
summary(lm(Gutted.Weight.kg ~ Cestode.index + Feed.Type + Sex, meta.holofish))
"Residual standard error: 1.213 on 456 degrees of freedom
(1 observation deleted due to missingness)
Multiple R-squared:  0.1761,	Adjusted R-squared:  0.1671
F-statistic:  19.5 on 5 and 456 DF,  p-value: < 2.2e-16"
## Cestode study subset
meta.ind <- subset(meta.holofish, Fish.ID %in% unique(meta$Fish.ID))
table(meta.ind[,c("Size.class","Cestode.present")])
"          Cestode.present
Size.class FALSE TRUE
Large      2    5
Medium     6    6
Small      1   10"
prop.table(table(meta.ind[,c("Size.class","Cestode.present")]), margin = 2)
"         Cestode.present
Size.class     FALSE      TRUE
Large  0.2222222 0.2380952
Medium 0.6666667 0.2857143
Small  0.1111111 0.4761905"
table(meta.ind[,c("Feed.Type","Cestode.present")])
"         Cestode.present
Feed.Type FALSE TRUE
Feed1     5   10
Feed2     4   11"
table(meta.ind[,c("Sex","Cestode.present")])
"   Cestode.present
Sex FALSE TRUE
F     3    5
M     6   16"
prop.table(table(meta.ind[,c("Sex","Cestode.present")]), margin = 1)
"   Cestode.present
Sex     FALSE      TRUE
F 0.3750000 0.6250000
M 0.2727273 0.7272727"
summary(lm(Gutted.Weight.kg ~ Cestode.index + Feed.Type + Sex, meta.ind))
"Residual standard error: 1.177 on 24 degrees of freedom
Multiple R-squared:  0.2147,	Adjusted R-squared:  0.05109
F-statistic: 1.312 on 5 and 24 DF,  p-value: 0.2921"
## Supp Figure: index vs weight ##
sfig.kg.a <- ggplot(meta.holofish, aes(Cestode.index, Gutted.Weight.kg))+
geom_violin(draw_quantiles = 0.5)+
geom_point(aes(color = Cestode.index), size = 2, position = position_jitterdodge())+
labs(x = "Cestode index", y = "Gutted weight (kg)", title = "HoloFish cohort")+
theme_classic()+
theme(text = element_text(color = "black", size = 11), rect = element_rect(size = 0.5),
line = element_line(size = 0.5), axis.text = element_text(size = 12, colour = "black"),
legend.position = "none")
sfig.kg.b <- ggplot(meta.ind, aes(Cestode.index, Gutted.Weight.kg))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(color = Cestode.index), size = 2, position = position_jitterdodge())+
labs(x = "Cestode index", y = "Gutted weight (kg)", title = "Cestode investigation")+
theme_classic()+
theme(text = element_text(color = "black", size = 11), rect = element_rect(size = 0.5),
line = element_line(size = 0.5), axis.text = element_text(size = 12, colour = "black"),
legend.position = "none")
if(!file.exists("figures/Supp_Fig_cestode_index_vsS2_weight.pdf")){
pdf("figures/Supp_Fig_cestode_index_vsS2_weight.pdf", width = 8, height = 4)
plot_grid(sfig.kg.a, sfig.kg.b, align = "hv", axis = "tblr", labels = c("a","b"), nrow = 1)
dev.off()
}
### MAG functional comparison ####
gene.clusters <- read.delim("data/mycoplasma_MAG_gene_clusters.txt")
gene.clusters$annotated <- sapply(seq(1,nrow(gene.clusters),1), function(i){
k <- gene.clusters[i,"KOfam"] == ""
c <- gene.clusters[i,"COG20_FUNCTION_ACC"] == ""
p <- gene.clusters[i,"Pfam"] == ""
if(k & c & p){
#all blank
FALSE
} else {
TRUE
}
})
gc.id.lists <- list(
Ml = unique(gene.clusters[which(gene.clusters$genome_name == "Candidatus_Mycoplasma_lavaretus"),"gene_cluster_id"]),
Msm = unique(gene.clusters[which(gene.clusters$genome_name == "Candidatus_Mycoplasma_salmoninae_mykiss"),"gene_cluster_id"]),
Mss = unique(gene.clusters[which(gene.clusters$genome_name == "Candidatus_Mycoplasma_salmoninae_salar"),"gene_cluster_id"]),
M_iowae = unique(gene.clusters[which(gene.clusters$genome_name == "Mycoplasma_iowae"),"gene_cluster_id"]),
M_penetrans = unique(gene.clusters[which(gene.clusters$genome_name == "Mycoplasma_penetrans"),"gene_cluster_id"]),
M_mobile = unique(gene.clusters[which(gene.clusters$genome_name == "Mycoplasma_mobile"),"gene_cluster_id"]),
CE_seq1 = unique(gene.clusters[which(gene.clusters$genome_name == "CE_seq1"),"gene_cluster_id"]),
CE_seq7 = unique(gene.clusters[which(gene.clusters$genome_name == "CE_seq7"),"gene_cluster_id"]),
CE_seq10 = unique(gene.clusters[which(gene.clusters$genome_name == "CE_seq10"),"gene_cluster_id"]),
U_diversum = unique(gene.clusters[which(gene.clusters$genome_name == "Ureaplasma_diversum"),"gene_cluster_id"]),
U_urealyticum = unique(gene.clusters[which(gene.clusters$genome_name == "Ureaplasma_urealyticum"),"gene_cluster_id"])
)
### diff versions
ggVennDiagram(gc.id.lists[c("CE_seq7","CE_seq1","Mss","Msm","Ml")],
category.names = c("CE_seq7","CE_seq1","Ms. salar","Ms. mykiss", "M. lavaretus"),
label = "count", label_alpha = 0)+
scale_fill_gradient(low = NA, high = NA)+
scale_color_manual(values = c("#BC93FF","#A4EEDE","#FFCDAB","#FFE6D5","#E5D5FF"))+
theme(legend.position = "none")
ggVennDiagram(gc.id.lists[c("CE_seq7","CE_seq1","Mss","Msm","Ml")],
category.names = c("CE_seq7","CE_seq1","Ms. salar","Ms. mykiss", "M. lavaretus"),
label = "count", label_alpha = 0)+
scale_fill_gradient(low = NA, high = NA)+
scale_color_manual(values = rep("black",5))+
theme(legend.position = "none")
if(!file.exists("figures/Supp_FigS7a_Venn_MAG_geneclusters_v2.png")){
ggsave("figures/Supp_FigS7a_Venn_MAG_geneclusters_v2.png", units = "in", dpi = 600, width = 6.5, height = 6)
}
table(gene.clusters[,c("genome_name","annotated")])
prop.table(table(gene.clusters[,c("genome_name","annotated")]), margin = 1)
#### END ####
pdf("figures/Supp_FigS2_cestode_index_vs_weight.pdf", width = 8, height = 4)
plot_grid(sfig.kg.a, sfig.kg.b, align = "hv", axis = "tblr", labels = c("a","b"), nrow = 1)
dev.off()
plot_grid(p.bx.gen.1, p.bx.gen.2, align = "h", axis = "tblr",
nrow = 1, rel_widths = c(1,1.2), labels = c("a","b"))
plot_grid(p.bx.gen, p.bx.asv, align = "hv", axis = "tblr", nrow = 2, labels = c("","c"), rel_heights = c(1,0.8))
if(!file.exists("figures/Supp_FigS5_cestode_comb_genusASV_boxplot.pdf")){
ggsave("figures/Supp_FigS5_cestode_comb_genusASV_boxplot.pdf", width = 6.5, height = 6.5)
}
png("figures/Supp_FigS4c_Venn_16Staxa.png", units = "in", res = 600, width = 6, height = 4)
ps_venn(psm.relab, "SampleType.CestodeBin", weight = FALSE, fill = NA, col = c("#619CFF","#00BA38","#530087","#fcdf03"), lwd = 2,
labels = list(labels=NA, font=1), legend = TRUE)
dev.off()
pdf("figures/Fig3_mycoplasma_clade_by_sample_type.pdf",
width = 6.5, height = 2.5, colormodel = "srgb", paper = "a4r")
ggplot(myco.df.m[grep("Myco",myco.df.m$Myco_clade),], aes(Sample.type, relab))+
facet_wrap(~Myco_clade, nrow = 1,
labeller=labeller(Myco_clade = c(Myco_Salmon="Salmon clade", Myco_Cestode1="Cestode clade 1", Myco_Cestode2="Cestode clade 2")))+
geom_line(aes(group = Fish.ID, color = Cestode.index, linetype = as.factor(Samples.per.fish)))+
geom_point(aes(color = Cestode.index), size = 2)+
scale_x_discrete(labels = c("salmon\ngut","cestode\nwash","cestode\nbody"))+
scale_linetype_manual(values = c(0,3,1))+
labs(x="Sample type", y="Proportion of 16S reads", color = "Cestode index", linetype = "Samples per fish")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "right", strip.text = element_text(face = "bold"))
dev.off()
ggplot(myco.df.m[grep("Myco",myco.df.m$Myco_clade),], aes(Sample.type, relab))+
facet_wrap(~Myco_clade, nrow = 1,
labeller=labeller(Myco_clade = c(Myco_Salmon="Salmon clade", Myco_Cestode1="Cestode clade 1", Myco_Cestode2="Cestode clade 2")))+
geom_line(aes(group = Fish.ID, color = Cestode.index, linetype = as.factor(Samples.per.fish)))+
geom_point(aes(color = Cestode.index), size = 2)+
scale_x_discrete(labels = c("salmon\ngut","cestode\nwash","cestode\nbody"))+
scale_linetype_manual(values = c(0,3,1))+
labs(x="Sample type", y="Proportion of 16S reads", color = "Cestode index", linetype = "Samples per fish")+
theme_bw()+
theme(text = element_text(color = "black", size = 7), rect = element_rect(size = 0.5),
line = element_line(size = 0.5),
axis.text = element_text(size = 6, colour = "black"),
legend.position = "right", strip.text = element_text(face = "bold"))
pdf("figures/Supp_FigS3_NMDS_salmon_gut_by_cestode.pdf", width = 3.4, height = 3.4)
plot_ordination(psm.gut.clr, ord.gut, type="samples", axes=c(1,2), color="Cestode.index")+
geom_point(size=1)+
labs(color = "Cestode index")+
scale_x_continuous(limits = c(-25,25))+
scale_y_continuous(limits = c(-25,25))+
coord_fixed(ratio = 1)+
theme_bw()+
theme(text = element_text(color = "black", size = 7), panel.grid = element_blank(),
legend.position = "right",
axis.text = element_text(size = 6, colour = "black"),
panel.border = element_rect(size = 0.5))
dev.off()
